{"version":3,"file":"useBinanceTicker.js","names":["_react","require","_lodash","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","a","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","n","l","iterator","u","f","next","done","isArray","useBinanceTicker","symbols","_useState","useState","_useState2","prices","setPrices","createWebSocket","url","ws","WebSocket","onopen","console","log","handleWebSocketMessage","debounce","event","message","JSON","parse","data","symbol","s","price","parseFloat","c","prev","onmessage","onerror","error","close","onclose","warn","reconnect","delay","undefined","setTimeout","useEffect","streams","map","sym","concat","toLowerCase","join","wsUrl","_default","exports"],"sources":["../../src/hooks/useBinanceTicker.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { debounce } from \"lodash\";\n\n/**\n * A custom React hook that establishes a WebSocket connection to Binance's ticker stream\n * and returns the latest prices for a list of specified cryptocurrency symbols.\n *\n * @param {string[]} symbols - An array of cryptocurrency symbols to track (e.g., ['BTCUSDT', 'ETHUSDT']).\n * @returns {Object<string, number>} An object where the keys are the symbols and the values are the latest prices.\n */\nconst useBinanceTicker = (symbols) => {\n  const [prices, setPrices] = useState({});\n\n  /**\n   * Creates a WebSocket connection to the specified URL and handles incoming messages\n   * to update the cryptocurrency prices.\n   *\n   * @param {string} url - The WebSocket URL to connect to.\n   * @returns {WebSocket} The created WebSocket instance.\n   */\n  const createWebSocket = (url) => {\n    const ws = new WebSocket(url);\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n\n    /**\n     * Handles incoming WebSocket messages with debounce to prevent excessive updates.\n     *\n     * @param {MessageEvent} event - The WebSocket message event.\n     */\n    const handleWebSocketMessage = debounce((event) => {\n      const message = JSON.parse(event.data);\n      const data = message.data;\n      const symbol = data.s; // Symbol name\n      const price = parseFloat(data.c); // Current price\n\n      setPrices((prev) => ({\n        ...prev,\n        [symbol]: price,\n      }));\n    }, 60000); // Debounce interval: 60 seconds\n\n    ws.onmessage = handleWebSocketMessage;\n\n    ws.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n      ws.close();\n    };\n\n    ws.onclose = () => {\n      console.warn(\"WebSocket connection closed. Reconnecting...\");\n      reconnect(url);\n    };\n\n    return ws;\n  };\n\n  /**\n   * Reconnects to the WebSocket server after a specified delay.\n   *\n   * @param {string} url - The WebSocket URL to reconnect to.\n   * @param {number} [delay=5000] - The delay in milliseconds before attempting to reconnect.\n   */\n  const reconnect = (url, delay = 5000) => {\n    setTimeout(() => {\n      createWebSocket(url);\n    }, delay);\n  };\n\n  useEffect(() => {\n    if (symbols.length === 0) {\n      return;\n    }\n\n    const streams = symbols\n      .map((sym) => `${sym.toLowerCase()}@ticker`)\n      .join(\"/\");\n    const wsUrl = `wss://stream.binance.com:9443/stream?streams=${streams}`;\n    const ws = createWebSocket(wsUrl);\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [symbols]);\n\n  return prices;\n};\n\nexport default useBinanceTicker;\n"],"mappings":"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","ignoreList":[]}