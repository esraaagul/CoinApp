{"version":3,"file":"apiClient.js","names":["_axios","_interopRequireDefault","require","e","__esModule","apiClient","axios","create","baseURL","headers","interceptors","response","use","error","console","message","Promise","reject","_default","exports"],"sources":["../../src/api/apiClient.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse, AxiosError } from \"axios\";\n\n/**\n * Creates an Axios instance configured with the base URL for Binance API and default headers.\n *\n * @type {AxiosInstance}\n */\nconst apiClient: AxiosInstance = axios.create({\n  baseURL: \"https://api.binance.com\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n/**\n * Response interceptor to log errors and reject the promise if the request fails.\n *\n * @param {AxiosResponse} response - The successful response object.\n * @param {AxiosError} error - The error object that contains details about the error.\n * @returns {Promise<AxiosResponse>} The original response if successful, or a rejected promise if an error occurs.\n */\napiClient.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    console.error(\"API error:\", error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAwE,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAExE;AACA;AACA;AACA;AACA;AACA,IAAME,SAAwB,GAAGC,iBAAK,CAACC,MAAM,CAAC;EAC5CC,OAAO,EAAE,yBAAyB;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,SAAS,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjC,UAACD,QAAuB;EAAA,OAAKA,QAAQ;AAAA,GACrC,UAACE,KAAiB,EAAK;EACrBC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC1C,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAAC,IAAAK,QAAA,GAAAC,OAAA,cAEad,SAAS","ignoreList":[]}